name: Deploy QA
on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache
        with:
          key: "${{ hashFiles('package-lock.json') }}"
          path: node_modules
      - if: steps.cache.outputs.cache-hit != 'true'
        run: make install
      - run: make lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache
        with:
          path: node_modules
          key: "${{ hashFiles('package-lock.json') }}"
      - if: steps.cache.outputs.cache-hit != 'true'
        run: make install
      - id: run-tests
        run: make test
      - if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: report.json

  test_reports:
    needs: [test]
    runs-on: ubuntu-latest
    if: failure()
    # if: failure() && needs.test.result == 'failure'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build-reports
      - run: cat report.json

  build:
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache
        with:
          path: node_modules
          key: "${{ hashFiles('package-lock.json') }}"
      - if: steps.cache.outputs.cache-hit != 'true'
        run: make install
      - run: make build
      - uses: actions/upload-artifact@v3
        with:
          path: dist
          name: build
          retention-days: 1

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: qa
      url: http://gh-actions-course.mariusmihai.org/
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: build
          path: dist
      - run: make deploy
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
